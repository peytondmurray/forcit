*********0*********0*********0********0*********0*********0*********0**
* Forcdecimate.f: Reads a H-vs-M.out file generated by readforc.f
* and outputs every nth FORC path in a GMT compatible format
* Intended for use with FORC data
* Written by Gary Acton March 2004
*********0*********0*********0********0*********0*********0*********0**
      character*70 data
      character*1 tab,achk
      character*20 arg
      character*20 dum
      tab='\t' 

* Set defaults just in case. N is the Nth FORC.
* Thus N=10 means retrieve every 10th FORC
      N=10
*********0*********0*********0********0*********0*********0*********0**
* Get 
      iarg=1
      ia=2
      narg=iargc()
      if(narg.ne.0)then
        call getarg(iarg,arg)
        if(arg.eq.'-h')then
  1       write(*,*)'Usage: forcdecimate [-n] [N]'
          write(*,*)'Forcdecimate retrieves every Nth Forc ',
     &    'in field versus moment space. '
          write(*,*)'The input and output are GMT compatible ASCII ',
     &    'files with each FORC separated by a GMT comment line  '
          write(*,*)'that begins with the greater than (>) symbol. ',
     &    'The input is assumed to be all the forc paths from '
          write(*,*)'a typical FORC measurement, which has been ',
     &    'processed by program readforc and output in the '
          write(*,*)'H-vs-M.out file.'
          write(*,*)' '
          write(*,*)'An example of how to run forcdecimate is: '
          write(*,*)'forcdecimate -n 5 < input > output  '
          write(*,*)' '
          write(*,*)' Options:'
          write(*,*)'   -h  gives these help pages '
          write(*,*)'   -n  followed by N '
          write(*,*)'     i.e., '
          write(*,*)'   -n 10'
          write(*,*)' Defaults:'
          write(*,*)'   N = 10'
          stop
        elseif(arg .eq. '-n') then
          call getarg(ia,dum)
*         write(2,*) dum
          read(dum,*) N
        endif
      endif
*********0*********0*********0*********0*********0*********0*********0**
      itest=0
 10   read(5,'(a70)',end=999) data 
      read(data,'(a1)') achk 
      if(achk .eq. '>') then 
        itest=itest+1
      else
        goto 10
      endif
      if(itest .eq. N) then
        write(6,'(a70)') data
 20     read(5,'(a70)',end=999) data 
        read(data,'(a1)') achk 
        if(achk .eq. '>') goto 100
        write(6,'(a70)') data
        goto 20
      else
        goto 10
      endif
100   itest=1
      goto 10

 999  continue
      stop
      end
